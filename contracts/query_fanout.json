{"name":"Default","description":"```\nI am training a query fanout model for my agent that will:\n              - Take a broad, complex query expressed by a human\n              - Convert it into a set of narrow, targeted information needs\n              - Enable querying specific backends with these narrowed queries\n              For each broad query you receive, generate a prioritized set of narrow fanout queries. Order them by importance, where:\n              - Most important narrow queries appear first\n              - Importance is determined by how much essential information from the broad query each narrow query covers\n              Requirements for individual narrow queries:\n              1. Must seek a single piece of information\n              2. Must avoid compound elements (e.g., no \"look for X and Y\")\n              3. Must be formulated for targeted question answering\n              Requirements for the collection of narrow queries:\n              1. Must collectively cover all implicit information needs from the broad query\n              2. Must be non-redundant and target specific, non-overlapping information needs\n              Post-generation process:\n              - Review all generated narrow queries\n              - If any query is still too broad, decompose it further into multiple narrow queries\n              - Repeat this process until all queries are appropriately narrow and specific\n              \n              Example input and output:\n              Input broad query: \"I am creating a diet for my child and want to understand how much dairy products to use\"\n              Output:\n              {\n                  \"query\": \"I am creating a diet for my child and want to understand how much dairy products to use\",\n                  \"fanout_queries\": [\n                      \"Health benefits milk for kids\",\n                      \"Nutritional value of milk\",\n                      \"Nutritional value of cheese\",\n                      \"Recommended calorie consumption children\",\n                      \"Is yogurt good for kids?\"\n                  ]\n              }\n```","dimensions":[{"label":"Query Specificity","description":"Query Specificity","sub_dimensions":[{"label":"Single Information Need","description":"Does each narrow query seek a single piece of information?","scoring_type":"PI_SCORER"},{"label":"Avoid Compound Elements","description":"Does each narrow query avoid compound elements (e.g., no 'look for X and Y')?","scoring_type":"PI_SCORER"},{"label":"Targeted Question Answering","description":"Is each narrow query formulated for targeted question answering?","scoring_type":"PI_SCORER"},{"label":"Query Specificity","description":"Is each narrow query specific enough to be actionable?","scoring_type":"PI_SCORER"},{"label":"Query Narrowness","description":"Are all queries appropriately narrow and specific after the decomposition process?","scoring_type":"PI_SCORER"}],"weight":0.3},{"label":"Query Quality","description":"Query Quality","sub_dimensions":[{"label":"Query Clarity","description":"Is each narrow query clearly formulated?","scoring_type":"PI_SCORER"},{"label":"Query Relevance","description":"Is each narrow query relevant to the broad query?","scoring_type":"PI_SCORER"},{"label":"Query Uniqueness","description":"Is each narrow query unique and not a duplicate of another query?","scoring_type":"PI_SCORER"},{"label":"Query Length","description":"Is each narrow query concise and to the point?","scoring_type":"PI_SCORER"},{"label":"Query Grammar","description":"Is each narrow query grammatically correct?","scoring_type":"PI_SCORER"},{"label":"Query Spelling","description":"Is each narrow query free of spelling errors?","scoring_type":"PI_SCORER"},{"label":"Query Format","description":"Is each narrow query formatted correctly?","scoring_type":"PI_SCORER"}],"weight":0.3},{"label":"Query Coverage","description":"Query Coverage","sub_dimensions":[{"label":"Essential Information Coverage","description":"Does each narrow query cover essential information from the broad query?","scoring_type":"PI_SCORER"},{"label":"Collective Coverage","description":"Do the narrow queries collectively cover all implicit information needs from the broad query?","scoring_type":"PI_SCORER"},{"label":"Query Completeness","description":"Is the set of narrow queries complete in addressing the broad query?","scoring_type":"PI_SCORER"}],"weight":0.3},{"label":"Query Prioritization","description":"Query Prioritization","sub_dimensions":[{"label":"Importance Order","description":"Are the narrow queries ordered by importance, with the most important appearing first?","scoring_type":"PI_SCORER"},{"label":"Query Prioritization","description":"Is the prioritization of narrow queries logical and justified?","scoring_type":"PI_SCORER"},{"label":"Query Importance Check","description":"Is there a check to ensure the importance of each query is considered?","scoring_type":"PI_SCORER"}],"weight":0.3},{"label":"Redundancy and Decomposition","description":"Redundancy and Decomposition","sub_dimensions":[{"label":"Non-Redundancy","description":"Are the narrow queries non-redundant and targeting specific, non-overlapping information needs?","scoring_type":"PI_SCORER"},{"label":"Broad Query Decomposition","description":"Are any broad queries decomposed further into multiple narrow queries?","scoring_type":"PI_SCORER"},{"label":"Query Redundancy Check","description":"Is there a check for redundancy among the narrow queries?","scoring_type":"PI_SCORER"},{"label":"Query Decomposition Check","description":"Is there a check to ensure broad queries are decomposed into narrow queries?","scoring_type":"PI_SCORER"}],"weight":0.3}]}